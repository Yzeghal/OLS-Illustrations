price_char[df$char ==0] = NA
dev.off()
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 100, lty = 2)
}
plotter(df)
plotter<-function(df){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 100, lty = 2)
}
plotter(df)
df$price
trial  <- function(n=2000, dep = 1000, len = 1000) {
error <- rnorm(n, mean = 0, sd = 1)
cartel <- c(rep(0, n/2), rep(1,n/2))
char <- rep(0,n)
char[dep:(dep+len)] = 1
price <- 20*cartel + 5*char -3*(cartel*char)+ error
df <- list(price = price, cartel = cartel, char = char)
return(df)
}
df = trial(n=2000, dep = 1, len = 1099)
plotter(df)
plotter<-function(df){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
}
plotter(df)
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df)
}
}
trial  <- function(n=2000, dep = 1000, len = 1000) {
error <- rnorm(n, mean = 0, sd = 1)
cartel <- c(rep(0, n/2), rep(1,n/2))
char <- rep(0,n)
char[dep:(dep+len)] = 1
price <- 10*cartel + 5*char -5*(cartel*char)+ error
df <- list(price = price, cartel = cartel, char = char)
return(df)
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df)
}
}
m[,500]
plotter<-function(df,lm = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lm)){
return()
}
lines(lm$fitted.values, col = "green")
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
plotter<-function(df,lm = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lm)){
return()
}
lines(lm$fitted.values, col = "green", lwd = 2)
}
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
plotter<-function(df,lm = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lm)){
return()
}
M = as.matrix(lm$coefficients,nrow = 3)%*%rbind (rep(1,2000), df$cartel, df$char)
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
lm(price~cartel+char, data = df)
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
as.matrix(lm$coefficients, nrow = 3)
lm
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = as.matrix(lmod$coefficients,nrow = 3)%*%rbind (rep(1,2000), df$cartel, df$char)
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
lmod
rbind (rep(1,2000), df$cartel, df$char)
dim(rbind (rep(1,2000), df$cartel, df$char))
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = as.matrix(lmod$coefficients,nrow = 1)%*%rbind (rep(1,2000), df$cartel, df$char)
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
plotter(df)
lm(price~cartel+char, data = df)
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
lmod = lm(price~cartel+char, data = df)
as.matrix(lmod$coefficients, nrow = 3)
as.matrix(lmod$coefficients, nrow = 1)
dim(as.matrix(lmod$coefficients, nrow = 1))
dim(as.matrix(lmod$coefficients, nrow = 3))
dim(matrix(lmod$coefficients, nrow = 3))
dim(matrix(lmod$coefficients, nrow = 1))
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = matrix(lmod$coefficients,nrow = 1)%*%rbind (rep(1,2000), df$cartel, df$char)
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = matrix(lmod$coefficients,nrow = 1)%*%rbind (rep(1,2000), df$cartel, df$char)
sd(M - lmod$fitted.values)
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = matrix(lmod$coefficients,nrow = 1)%*%rbind (rep(1,2000), df$cartel, df$char)
print(sd(M - lmod$fitted.values))
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = matrix(lmod$coefficients,nrow = 1)*rbind (rep(1,2000), df$cartel, df$char)
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
plotter(df)
lmod = lm(price~cartel+char, data = df)
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
lotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = rbind (rep(1,2000), df$cartel, df$char)
for (i in 1:3){
M[i,] = M[i,] * lmod$coefficients[i]
}
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = rbind (rep(1,2000), df$cartel, df$char)
for (i in 1:3){
M[i,] = M[i,] * lmod$coefficients[i]
}
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lm$fitted.values, col = "green", lwd = 2)
}
ev.off()
dev.off()
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (i == 500){
plotter(df, lm(price~cartel+char, data = df))
}
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (any(c(1,500,901) == i)){
plotter(df, lm(price~cartel+char, data = df))
}
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (any(c(1,500,901) == i)){
plotter(df, lm(price~cartel+char, data = df))
}
}
plotter<-function(df,lmod = NULL){
price_regular = df$price
price_regular[df$char ==1] = NA
price_char = df$price
price_char[df$char ==0] = NA
plot(price_regular, ylim = c(-10,30))
points(price_char, col="red")
abline(v = 1000, lty = 2)
abline(h = 0, lty = 2)
if (is.null(lmod)){
return()
}
M = rbind (rep(1,2000), df$cartel, df$char)
for (i in 1:3){
M[i,] = M[i,] * lmod$coefficients[i]
}
lines(M[1,], col = "black", lty = 2)
lines(M[2,], col = "orange")
lines(M[3,], col = "blue")
lines(lmod$fitted.values, col = "green", lwd = 2)
}
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (any(c(1,500,901) == i)){
plotter(df, lm(price~cartel+char, data = df))
}
}
dev.off()
m = matrix(0,3,0)
for (i in 1:901){
df = trial(n=2000, dep = i, len = 1099)
m = cbind(m, as.matrix(lm(price~cartel+char, data = df)$coefficients, nrow = 3))
if (any(c(1,500,901) == i)){
dev.new()
plotter(df, lm(price~cartel+char, data = df))
}
}
m[,c(1,500,901)]
library(MASS)  #mvnorm
library(stats) #summarise regressions with asymptotic sd estimators (non heteroscedastic robust, use sandwich library for that)
library(matrixcalc)  # Used for matrix inverse
library (matlib)
library(rgl)#usedfor 3d representation
#Coded a R2 that is faster to call than $r.squared
#####
vec <- diag(3)
rownames(vec) <- c("e1", "e2", "e3")
open3d()
vectors3d(vec, color=rep("black",3), lwd=2, cex.lab =2)
# draw the XZ plane, whose equation is Y=0
planes3d(0, 0, 1, 0, col="gray", alpha=0.2)
V = diag(3) #variance matrix : base will be orthogonal and normed vectors.
X = mvrnorm(n=50000, mu = c(0,0,0), Sigma = V)
e1 = X[,1]
e2 = X[,2]
e3 = X[,3]
eps = rnorm(50000,0,1) #another noise (could have been generated in the line above)
V = diag(3) # variance matrix
E = mvrnorm(n=50000, mu = c(0,0,0), Sigma = V)
e1 = E[,1]
e2 = E[,2]
e3 = E[,3]
# e1,e2,e3 are observations of 3  random variables that form an orthonormal base of a 3 dimension subspace of RV in |R
# 1st step : generating y
# no noise, just a projection
y = e3+e2
reg1 = lm(y~e2-1) # -1 specified not to add a constant to the model.
summary(reg1)
R2(reg1)
R2 = function(m){
#takes a lm object and yields the Rsquared
if (class(m)!="lm"){
stop("Input i not a linear model")
}
x = m$model[,1]
SCT = sd(x)^2
SCR = sd(m$residuals)^2
R2 = 1-SCR/SCT
return(R2)
}
R2(reg1)          # ~0.5 as expected : ||e2||?/||e1+e2||?
#####
set.seed(18)
V = diag(3) # variance matrix
E = mvrnorm(n=50000, mu = c(0,0,0), Sigma = V)
e1 = E[,1]
e2 = E[,2]
e3 = E[,3]
y = e3+e2
reg1 = lm(y~e2-1) # -1 specified not to add a constant to the model.
summary(reg1)
R2(reg1)          # ~0.5 as expected : ||e2||?/||e1+e2||?
set.seed(18)
V = diag(3) # variance matrix
E = mvrnorm(n=50000, mu = c(0,0,0), Sigma = V)
e1 = E[,1]
e2 = E[,2]
e3 = E[,3]
# e1,e2,e3 are observations of 3  random variables that form an orthonormal base of a 3 dimension subspace of RV in |R
# 1st step : generating y
# no noise, just a projection
y = e3+e2
reg1 = lm(y~e2-1) # -1 specifies not to add a constant to the model.
summary(reg1)
R2(reg1)          # ~0.5 as expected : ||e2||^2/||e2+e3||^2
set.seed(18)
V = diag(3) # variance matrix
E = mvrnorm(n=50000, mu = c(0,0,0), Sigma = V)
e1 = E[,1]
e2 = E[,2]
e3 = E[,3]
# e1,e2,e3 are observations of 3  random variables that form an orthonormal base of a 3 dimension subspace of RV in |R
# 1st step : generating y
# no noise, just a projection
y = e3+e2
reg1 = lm(y~e2-1) # -1 specifies not to add a constant to the model.
reg1
R2(reg1)          # ~0.5 as expected : ||e2||^2/||e2+e3||^2
set.seed(18)
V = diag(3) # variance matrix
E = mvrnorm(n=50000, mu = c(0,0,0), Sigma = V)
e1 = E[,1]
e2 = E[,2]
e3 = E[,3]
# e1,e2,e3 are observations of 3  random variables that form an orthonormal base of a 3 dimension subspace of RV in |R
# 1st step : generating y
y = e3+e2
reg1 = lm(y~e2-1) # -1 specifies not to add a constant to the model.
reg1
R2(reg1)          # ~0.5 as expected : ||e2||^2/||e2+e3||^2
